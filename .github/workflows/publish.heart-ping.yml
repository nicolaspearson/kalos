name: publish heart-ping

on:
  push:
    tags:
      - heart-ping/*
  workflow_dispatch:
    inputs:
      version:
        description: The version to publish
        required: true

env:
  PACKAGE: heart-ping
  PACKAGE_JSON_FOLDER: packages/heart-ping

jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current git repository
        uses: actions/checkout@master
      - name: Use Node.js
        uses: actions/setup-node@master
        with:
          node-version: 16
      - name: Install yarn dependencies
        run: yarn install --immutable
      - name: Build package
        run: yarn workspace $PACKAGE build
      - name: Load package version
        id: load_version
        run: |
          if [ "$GITHUB_EVENT_NAME" = 'workflow_dispatch' ]
          then
            VERSION="${{ github.event.inputs.version }}"
          else
            if [ "$GITHUB_EVENT_NAME" = 'release' ]
            then
              TAG_NAME="${{ github.event.release.tag_name }}"
            else
              TAG_NAME="${{ github.ref }}"
            fi
            CLEAN_TAG=${TAG_NAME##*/}
            VERSION=${CLEAN_TAG//v}
          fi
          echo "::set-output name=version::$VERSION"
      - name: Update package.json version to ${{ steps.load_version.outputs.version }}
        uses: mikefarah/yq@v4.18.1
        with:
          cmd: |
            yq eval '.version = "${{ steps.load_version.outputs.version }}"' -i ${{ env.PACKAGE_JSON_FOLDER }}/package.json -j
      - name: Commit new package.json version
        run: |
          git config --global user.email "nic.s.pearson@gmail.com"
          git config --global user.name "Nicbotic"
          git add ${{ env.PACKAGE_JSON_FOLDER }}/package.json
          git commit -m "chore(${{ env.PACKAGE }}): set package.json version ${{ steps.load_version.outputs.version }}"
      - name: Push changes to current git repository
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
      - name: Publish the package
        run: |
          cd ${{ env.PACKAGE_JSON_FOLDER }}
          npm --no-git-tag-version version $RELEASE_VERSION
          npm config set registry https://registry.npmjs.org
          echo "//registry.npmjs.org/:_authToken=${NODE_AUTH_TOKEN}" > ~/.npmrc
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
